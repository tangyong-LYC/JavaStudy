package com.yongtang.operator;
//======================================================================================================================
//Java语言支持如下运算符
//       1、算数运算符：         +、-、*、/、%（取余、模）、++、--
//       2、赋值运算符：         =
//       3、关系运算符：         >、<、>=、<=、==、!=、instanceof
//       4、逻辑关系运算符：      &&（与）、||（或）、！（非）
//       5、位运算符：           &,|,^,~,>>,<<,>>>
//       6、条件运算符：         ?,:
//       7、扩展赋值运算符：      +=、-=、*=、/=
//======================================================================================================================
/**
 * @author yongtang
 */
public class Operator {
    public static void main(String[] args) {
        //==============================================================================================================
        //二元运算符
        //==============================================================================================================
        int a = 10;
        int b = 20;
        int c = 30;
        int d = 40;
        System.out.println(a+b);
        System.out.println(a-b);
        System.out.println(a*b);
        System.out.println(a/(double)b);
        System.out.println(a%d);
        long e = 21323012412031230L;
        int f = 123;
        short q = 10;
        byte r = 8;
        System.out.println(e+f+q+r);
        System.out.println(f+q+f);
        System.out.println(q+r);
        //==============================================================================================================
        //关系运算符返回结果：正确，错误     布尔值
        //==============================================================================================================
        System.out.println(a==b);
        System.out.println(c==(a+b));
        System.out.println(c!=b);
        System.out.println(c>a);
        System.out.println(d<a);
        //==============================================================================================================
        //++(自增)、--(自减)   一元运算符
        //==============================================================================================================
        int qa = 1;
        //执行这行代码前，先给qb赋值，再自增
        int qb = qa++;
        //执行完这行代码前，先自增，再给qc赋值
        int qc = ++qa;
        System.out.println(qa);
        System.out.println(qb);
        System.out.println(qc);
        //==============================================================================================================
        //幂运算： 2^3=8    2*2*2=8   很多运算会使用一些工具类来运算
        //==============================================================================================================
        double pow = Math.pow(2,3);
        System.out.println(pow);
        //==============================================================================================================
        //逻辑运算符
        //与、或、非（取反）
        //==============================================================================================================
        boolean o = true;
        boolean p = false;
        System.out.println("o&&p"+(o&&p));
        System.out.println("a||b"+(o||p));
        System.out.println("!(a&&b)"+!(o&&p));
        //短路运算
        int qw = 1;
        boolean qe = (qw>4) && (qw++<4);
        System.out.println(qe);
        System.out.println(qw);
        //==============================================================================================================
        //   位运算
        //   A = 0011 1100
        //   B = 0000 1101
        //   A&B = 0000 1100    不同为0 相同为相同的值
        //   A|B = 0011 1101    不同为1 相同为相同的值
        //   A^B = 0011 0001    相同为0 不同为1
        //   ~B = 1111 0010     为相反的值
        //   <<   *2       >>     /2
        //   0000 0000    0
        //   0000 0001    1
        //   0000 0010    2
        //   0000 0011    3
        //   0000 0100    4
        //==============================================================================================================
        System.out.println(2<<3);
        //==============================================================================================================
        //扩展赋值运算符
        //==============================================================================================================
        int g = 10;
        int h = 20;
        //g = g+h
        g+=h;
        //g = g-h
        g-=h;
        System.out.println(g);
        //==============================================================================================================
        //三元运算符
        //      x?y:z
        // 如果x==true ,则结果为y，否则结果为z
        //==============================================================================================================
        int score = 80;
        String type = score < 60 ? "不及格":"及格";
        System.out.println(type);
    }
}
