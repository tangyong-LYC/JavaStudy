package com.yongtang.processControl;
//======================================================================================================================
//虽然所有循环结构都可以用while或者do...while表示，但java提供了另一种语句----for循环，使一些循环结构变得更加简单。
//for循环语句是支持迭代的一种通用结构，是最有效的、最灵活的循环结构。
//for循环的执行次数是在执行前就确定的。语法格式如下：
//for(初始化；布尔表达式；更新){
//     代码语句
// }
//======================================================================================================================

/**
 * @author yongtang
 */
public class ForLoopStructure {
    public static void main(String[] args) {
        for(int i = 1;i <= 100;i++){
            System.out.println(i);
        }
        //==============================================================================================================
        //关于for循环有以下几点说明：
        //最先执行初始化的步骤。可以申明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。
        //然后，检测布尔表达式的值。如果为true，循环体被执行。如果为false，循环终止，开始执行循环体后面的语句。
        //执行一次循环后，更新循环控制变量（迭代因子控制循环变量的增减）。
        //再次执行布尔表达式。循环执行上面的过程。
        //==============================================================================================================
        //练习：计算0-100之间的奇数和偶数和
        int a = 0;
        int b = 0;
        for (int c = 0;c<=100;c++){
            if(c%2!=0){
                a = a + c;
            }else {
                b = b + c;
            }
        }
        System.out.println(a+"\n"+b);
        //练习：打印九九乘法表
        for(int num1 = 1;num1 <= 9;num1++){
            for(int num2 = 1;num2 <= num1;num2++){
                System.out.print(num2+"*"+num1+"="+(num1*num2)+"\t");
            }
            System.out.println();
        }
        //==============================================================================================================
        //java增强型for循环语法格式如下：
        //for(声明语句：表达式)
        //{
        // 代码句子
        // }
        //声明语块：声明新的局部变量，该变量的类型必须和数组元素类型匹配。其作用域限定在循环语块，其值与此时数组元素的值相等。
        //表达式：表达式是要访问的数组名，或者是返回值为数组的方法。
        //==============================================================================================================
        int[] numbers = {10,20,30,40}; //定义一个数组
        for (int i=0;i<4;i++){
            System.out.println(numbers[i]);
        }
        //遍历数组的元素
        for (int x:numbers){
            System.out.println(x);
        }
    }
}
